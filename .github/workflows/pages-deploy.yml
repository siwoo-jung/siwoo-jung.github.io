# name: "Build and Deploy"
# on:
#   push:
#     branches:
#       - main
#       - master
#     paths-ignore:
#       - .gitignore
#       - README.md
#       - LICENSE

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow one concurrent deployment
# concurrency:
#   group: "pages"
#   cancel-in-progress: true

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#           # submodules: true
#           # If using the 'assets' git submodule from Chirpy Starter, uncomment above
#           # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

#       - name: Setup Ruby
#         # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
#         uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
#         with:
#           ruby-version: '3.3' # Not needed with a .ruby-version file
#           bundler-cache: true # runs 'bundle install' and caches installed gems automatically
#           cache-version: 0 # Increment this number if you need to re-download cached gems

#       - name: Setup Pages
#         id: pages
#         uses: actions/configure-pages@v4

#       - name: Setup Ruby
#         uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: 3.3
#           bundler-cache: true

#       - name: Build site
#         run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
#         env:
#           JEKYLL_ENV: "production"

#       - name: Test site
#         run: |
#           bundle exec htmlproofer _site \
#             \-\-disable-external \
#             \-\-ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"

#       - name: Upload site artifact
#         uses: actions/upload-pages-artifact@v3
#         with:
#           path: "_site${{ steps.pages.outputs.base_path }}"

#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v4
